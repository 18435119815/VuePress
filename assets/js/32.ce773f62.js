(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{673:function(s,n,e){"use strict";e.r(n);var a=e(88),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"node-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-js"}},[s._v("#")]),s._v(" node.js")]),s._v(" "),e("h2",{attrs:{id:"作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[s._v("#")]),s._v(" 作用")]),s._v(" "),e("ol",[e("li",[s._v("将js运行在浏览器中（node将V8引擎封装在了一个容器中，而它本身是用c++写的，可以将js转换成机器代码）")]),s._v(" "),e("li",[s._v("读写文件")]),s._v(" "),e("li",[s._v("充当服务器")]),s._v(" "),e("li",[s._v("连接数据库")])]),s._v(" "),e("h2",{attrs:{id:"利用node处理请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#利用node处理请求"}},[s._v("#")]),s._v(" 利用node处理请求")]),s._v(" "),e("h3",{attrs:{id:"基础步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础步骤"}},[s._v("#")]),s._v(" 基础步骤")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//1.  引入http\nconst http = require('http');\n//2.  通过http.createServer创建一个请求\nconst server = http.createServer( (req,res) => {} );\n//3.  监听端口 \nserver.listen(端口号,()=>{\n    //请求方法和url都在req中\n    const {method,url} = req;\n    res.setHeader('Content-Type'='application/json');\n    res.writeHead(404,'Content-Type','text/plain');\n    res.write('404 Not Fonud');\n\n    //get请求\n    if(method === 'GET'){\n        req.query = querystring.parse(url.split('?')[1]);\n        res.end(JSON.stringify(req.query))\n    }\n    \n\n    //post请求\n    if(method === 'POST'){\n        let postData = '';\n        //数据是以流的方式分批返回的  所以定义一个字符串依次接收\n        req.on('data',(chunk)=>{\n            postData += chunk.toString();\n        });\n        req.on('end',()=>{\n            console.log(postData);\n            res.end('数据接收完毕')\n        });\n    }\n});\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br")])]),e("h3",{attrs:{id:"常用api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用api"}},[s._v("#")]),s._v(" 常用api")]),s._v(" "),e("ol",[e("li",[s._v("设置响应头\nres.setHeader('Content-Type':'application/json')")]),s._v(" "),e("li",[s._v("重写响应头\nres.writeHead(404,'Content-Type':'text/plain');")]),s._v(" "),e("li")]),s._v(" "),e("p",[s._v("res.write('404 Not Fonud')\n4.  响应结果\nres.end('返回内容')")]),s._v(" "),e("h3",{attrs:{id:"实战"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实战"}},[s._v("#")]),s._v(" 实战")]),s._v(" "),e("ol",[e("li",[s._v("初始化项目")]),s._v(" "),e("li",[s._v("在入口文件中搭建基本的框架")]),s._v(" "),e("li",[s._v("安装nodemon")]),s._v(" "),e("li",[s._v("创建路由处理函数")]),s._v(" "),e("li",[s._v("处理404")])]),s._v(" "),e("h2",{attrs:{id:"小知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小知识"}},[s._v("#")]),s._v(" 小知识")]),s._v(" "),e("h3",{attrs:{id:"常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),e("ol",[e("li",[s._v("dir             列出当前目录的所有文件")]),s._v(" "),e("li",[s._v("cd 目录名        进入目录文件夹")]),s._v(" "),e("li",[s._v("md 目录名        创建目录文件夹")]),s._v(" "),e("li",[s._v("rd 目录名        删除目录文件夹")])]),s._v(" "),e("h3",{attrs:{id:"常用知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用知识"}},[s._v("#")]),s._v(" 常用知识")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("json文件中不能写注释")])]),s._v(" "),e("li",[e("p",[s._v("scripts 配置属性")])]),s._v(" "),e("li",[e("p",[s._v("npm 安装包 发布包")])]),s._v(" "),e("li",[e("p",[s._v("npm/cnpm   install/i md5  安装")])]),s._v(" "),e("li",[e("p",[s._v("npm install   依据package.json的dependencies这个文件进行依赖包的安装  node_modules")])]),s._v(" "),e("li",[e("p",[s._v("dependencies     运行依赖    项目在最终运行时需要的依赖文件  比如jquery\ndevDependencies  开发依赖    项目在开发阶段需要的依赖文件    比如node-sass (运行完就会转译，所以不需要，一个典型的开发依赖)")])]),s._v(" "),e("li",[e("p",[s._v("npm install md5 --save               把md5设置为当前项目的依赖\nnpm install node-sass --save-dev     把node-sass设置为当前项目的开发依赖\nnpm install node-sass  -g            全局安装  安装到电脑上的某个固定位置 这个位置所处的位置会在node.js被安装的时候自动添加到 电脑的全局变量中的path->就可以直接在命令行中执行这个命令了\nnpm uninstall jquery                 卸载 jquery\nnpm install  jquery@1.11.3  --save   安装指定版本\nnpm install  jquery@latest  --save   安装最新版本\nnpm update jquery  --save            更新某个包   例如版本号为   ^x,y,z    保持x不动的情况下，将y更新最后一个版本\n~x,y,z    保持x,y不动的情况下，将z更新为最后一个版本\n*x,y,z    直接更新到最新版\nX  不同  版本不兼容\ny  不同  功能不同\nz  不同  只是内部的修改")])]),s._v(" "),e("li",[e("p",[s._v("package.json             当前包的配置的文件和直接依赖的包\npackage-lock.json        锁定我们安装的某个包的时候，这个包自身以及它所依赖的包的配置\n目的就是为了在进行移动或者上线的时候 只需要npm install命令就可以正确的安装我们所需要的包")])]),s._v(" "),e("li",[e("p",[s._v("fs.readFileSync   同步读取内容\nfs.readFile       异步读取内容       异步操作会在同步操作中完成之后进行")])]),s._v(" "),e("li",[e("p",[s._v("fs.writeFile\nfs.writeFileSync")])]),s._v(" "),e("li",[e("p",[s._v("fs.appendFile   内容追加")])]),s._v(" "),e("li",[e("p",[s._v('fs.unlink       文件删除\nfs.unlink("文件名",err=>{')]),s._v(" "),e("p",[s._v("})")])]),s._v(" "),e("li",[e("p",[s._v('文件夹，目录\nfs.mkdir()  创建文件夹\nfs.mkdir("aa/bb/cc","{recursive:true},err=>{}")   创建多级目录')])]),s._v(" "),e("li",[e("p",[s._v("判断文件是否存在\nfs.exists(path, callback)   path：判断的文件夹、文件的路径  callback：回调函数")])]),s._v(" "),e("li",[e("p",[s._v("删除文件夹\nfs.rmdir('要删除的文件夹',回调函数)")])]),s._v(" "),e("li",[e("p",[s._v('读取文件夹\nfs.readdir("",callback)')])]),s._v(" "),e("li",[e("p",[s._v("MySQL基础命令\n插入数据"),e("br"),s._v(" "),e("code",[s._v("insert into 表名 (id， name， 表头，表头) values (值， 值， 值， 值)")]),s._v(";"),e("br"),s._v("\n查询全部或者个别表头数据"),e("br"),s._v(" "),e("code",[s._v("select *||id, name, 表头 from 表名")]),s._v(";"),e("br"),s._v("\n查询某个具体值的所有数据"),e("br"),s._v(" "),e("code",[s._v("select *from 表名 where id='1' and||or name='aiyouwei'")]),s._v(";"),e("br"),s._v("\n模糊查询"),e("br"),s._v(" "),e("code",[s._v("select *from 表名 where id like '%1%'")]),s._v(";"),e("br"),s._v("\n设值\n"),e("code",[s._v("update 表名 set title='标题' where id='1'")]),s._v(";")])])]),s._v(" "),e("h2",{attrs:{id:"牛刀小试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#牛刀小试"}},[s._v("#")]),s._v(" 牛刀小试")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// let fs = require("fs");\n// fs.readFile("./practive.js","utf8",(err,data)=>{\n//     if(err)throw err;\n//     console.log(data);\n// })\n//\n// fs.exists("node.md",(exists)=>{\n//     console.log(exists?"存在":"不存在")\n// })\n\n//删除包含文件的文件夹\n\nlet fs = require("fs");\nlet path = require("path");\nfunction fn(p) {\n    let children = fs.readdirSync(p);           //读取文件\n    if(children.length>0){                      //如果文件里面有内容\n        for(let i=0;i<children.length;i++){     //循环遍历\n            let a = path.join(p,children[i]);   //拼接子文件\n            let type = fs.statSync(a);          //判断文件类型\n            console.log(type.isFile());\n            if(type.isFile()){                    //如果是一个文件\n                fs.unlinkSync(a);\n            }else if(type.isDirectory()){         //如果是一个文件夹，则执行回调函数\n                fn(a);\n            }\n        }\n    }\n    fs.rmdirSync(p);                                //最后删除最外面的文件\n}\nfn("aa");\n\n\n//处理excel中的数据\n// let fs = require("fs");\n// let xlsx = require("node-xlsx");\n// let data = readFileSync("文件名");\n// let res = xlsx.parse(data);                         //转换类型\n// let students =  res[0].data;                        //删除不用的\n// students.shift();\n// students = students.reduce((a,b)=>a.concat(b));     //连接所有的数组\n// students = students.map(ele=>[ele]);                //将每个数据转为数组\n// let buffer = xlsx.build([[{name:"名单",data:students}]]);\n// fs.writeFileSync("名单.xlsx",buffer);\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);